--- Kullanıcılar (Users) tablosu: Sistemin kullanıcı bilgilerini saklar.
CREATE TABLE users (
   user_id  NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   username VARCHAR2 (50) NOT NULL
);

--- Kullanıcı Detayları (User Details) tablosu: Kullanıcıların detaylı bilgilerini saklar.
CREATE TABLE user_details (
   user_id    NUMBER PRIMARY KEY,
   password   VARCHAR2 (100) NOT NULL,
   email      VARCHAR2 (100) NOT NULL,
   first_name VARCHAR2 (50) NOT NULL,
   last_name  VARCHAR2 (50) NOT NULL,
   address_id NUMBER
      REFERENCES address (address_id),
   CONSTRAINT fk_user_details_users FOREIGN KEY (user_id)
      REFERENCES users (user_id)
);

--- Adres (Address) tablosu: Kullanıcıların adres bilgilerini saklar.
CREATE TABLE address (
   address_id  NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY
   PRIMARY KEY,
   street      VARCHAR2 (100),
   city        VARCHAR2 (50),
   state       VARCHAR2 (50),
   country     VARCHAR2 (50),
   postal_code VARCHAR2 (20)
);

--- Ürün Kategorileri (Product Categories) tablosu: Ürün kategorilerini saklar.
CREATE TABLE product_categories (
   category_id   NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   category_name VARCHAR2 (50),
   description   VARCHAR2 (200)
);

--- Ürünler (Products) tablosu: Satışa sunulan ürünlerin bilgilerini saklar.
CREATE TABLE products (
   product_id      NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   product_name    VARCHAR2 (100) NOT NULL,
   category_id     NUMBER
      REFERENCES product_categories (category_id),
   unit_price      NUMBER,
   stock_quantity  NUMBER,
   product_details VARCHAR2 (200)
);

--- Siparişler (Orders) tablosu: Kullanıcıların siparişlerini saklar.
CREATE TABLE orders (
   order_id     NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   user_id      NUMBER
      REFERENCES users (user_id),
   order_date   DATE NOT NULL,
   address_id   NUMBER
      REFERENCES address (address_id),
   order_status VARCHAR2 (20) NOT NULL
);

--- Sipariş Detayları (Order Details) tablosu: Siparişlerin detaylarını saklar.
CREATE TABLE order_details (
   detail_id  NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   order_id   NUMBER
      REFERENCES orders (order_id)
   NOT NULL,
   product_id NUMBER
      REFERENCES products (product_id)
   NOT NULL,
   quantity   NUMBER NOT NULL,
   unit_price NUMBER NOT NULL
);

--- Sepet (Shopping Cart) tablosu: Kullanıcıların alışveriş sepetlerini saklar.
CREATE TABLE shopping_cart (
   cart_id    NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   user_id    NUMBER
      REFERENCES users (user_id),
   created_at DATE NOT NULL,
   expires_at DATE
);

--- Sepet Ürünleri (Product Shopping Cart) tablosu: Sepetlerdeki ürünleri ve miktarlarını saklar.
CREATE TABLE product_shoppingcart (
   cart_id    NUMBER
      REFERENCES shopping_cart (cart_id),
   product_id NUMBER
      REFERENCES products (product_id),
   quantity   NUMBER NOT NULL
);

--- Kullanıcı Favorileri (User Favorites) tablosu: Kullanıcıların favori ürünlerini saklar.
CREATE TABLE user_favorites (
   favorite_id   NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   user_id       NUMBER
      REFERENCES users (user_id),
   product_id    NUMBER
      REFERENCES products (product_id),
   favorite_date DATE NOT NULL
);

--- İşlem Kayıtları (Operation Logs) tablosu: Sistemde gerçekleşen işlemlerin kayıtlarını tutar.
CREATE TABLE operation_logs (
   log_id         NUMBER
      GENERATED BY DEFAULT ON NULL AS IDENTITY,
   operation_date TIMESTAMP DEFAULT current_timestamp,
   user_id        NUMBER
      REFERENCES users (user_id),
   product_id     NUMBER
      REFERENCES products (product_id),
   order_id       NUMBER
      REFERENCES orders (order_id),
   operation      VARCHAR2 (100)
);

--- Kısıtlamaların Eklenmesi: Tablolara ilave edilen kısıtlamalar (primary key, foreign key, unique).

--- USER
ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY (user_id);

ALTER TABLE users ADD CONSTRAINT username_u UNIQUE (username);

ALTER TABLE user_details ADD CONSTRAINT email_u UNIQUE (email);

ALTER TABLE address ADD CONSTRAINT address_pk PRIMARY KEY (address_id);

--- PRODUCT
ALTER TABLE products ADD CONSTRAINT products_pk PRIMARY KEY (product_id);

ALTER TABLE products ADD CONSTRAINT product_name_u UNIQUE (product_name);

--- PRODUCT CATEGORIES
ALTER TABLE product_categories ADD CONSTRAINT product_categories_pk PRIMARY KEY (category_id);

ALTER TABLE product_categories ADD CONSTRAINT category_name_u UNIQUE (category_name);

--- ORDERS
ALTER TABLE orders ADD CONSTRAINT orders_pk PRIMARY KEY (order_id);

ALTER TABLE orders
   ADD CONSTRAINT orders_status_c CHECK (order_status IN ('CANCELLED', 'COMPLETE',
                                                          'OPEN'));

--- ORDER DETAILS
ALTER TABLE order_details ADD CONSTRAINT order_details_pk PRIMARY KEY (order_id,
                                                                       detail_id);

ALTER TABLE order_details ADD CONSTRAINT order_details_product_u UNIQUE (product_id,
                                                                         order_id);

--- SHOPPING CART
ALTER TABLE shopping_cart ADD CONSTRAINT shopping_cart_pk PRIMARY KEY (cart_id);

--- PRODUCT SHOPPING CART
ALTER TABLE product_shoppingcart ADD CONSTRAINT product_shoppingcart_pk PRIMARY KEY (cart_id);

ALTER TABLE product_shoppingcart DROP CONSTRAINT product_shoppingcart_pk;

--- USER FAVORITES
ALTER TABLE user_favorites ADD CONSTRAINT user_favorites_pk PRIMARY KEY (favorite_id);

--- LOG
ALTER TABLE operation_logs ADD CONSTRAINT operation_logs_pk PRIMARY KEY (log_id);

ALTER TABLE operation_logs ADD order_id NUMBER
   REFERENCES orders (order_id);
